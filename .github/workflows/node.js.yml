# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test -- --watch=false --browsers=ChromeHeadless

    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: webpack artifacts
        path: dist/angular-example-app
    
  publish:
      needs: build
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v4
        # Add your test steps here if needed...
        - name: Archive production artifacts
          uses: actions/download-artifact@v3
          with:
            name: webpack artifacts
            path: dist/angular-example-app
            
        - name: Login to GHCR
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITHUB_TOKEN }}
            
        - name: Lowercase repo name
          run: echo ""REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}
          
        - name: Build container
          uses: docker/build-push-action@v5
          with:
            context: .
            push: true
            tags: ghrc.io${{ env.REPO }}:${ github.sha }
            file: ./Dockerfile
            
  deploy:
    runs-on: ubuntu-latest
    needs: publish

    environment:
      name: "production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
     - name: Lowercase repo name
       run: echo ""REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}
       
     - name: Deploy to Azure Web App
       id: deploy-to-webapp
       uses: azure/webapps-deploy@85270a1854658d167ab239bce43949edb336fa7c
       with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        images: 'ghcr.io/${{ env.REPO }}:${{ github.sha }}'
